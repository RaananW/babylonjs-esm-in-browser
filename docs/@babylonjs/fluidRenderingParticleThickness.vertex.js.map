{"version":3,"file":"fluidRenderingParticleThickness.vertex.js","sourceRoot":"","sources":["../../../../lts/core/generated/Shaders/fluidRenderingParticleThickness.vertex.ts"],"names":[],"mappings":"AAAA,eAAe;AACf,OAAO,EAAE,WAAW,EAAE,MAAM,wBAAwB,CAAC;AAErD,MAAM,IAAI,GAAG,6CAA6C,CAAC;AAC3D,MAAM,MAAM,GAAG;;;;;;;;;;;;;;CAcd,CAAC;AACF,aAAa;AACb,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;AACxC,gBAAgB;AAChB,MAAM,CAAC,MAAM,2CAA2C,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC","sourcesContent":["// Do not edit.\nimport { ShaderStore } from \"../Engines/shaderStore\";\n\nconst name = \"fluidRenderingParticleThicknessVertexShader\";\nconst shader = `attribute vec3 position;\rattribute vec2 offset;\runiform mat4 view;\runiform mat4 projection;\runiform vec2 size;\rvarying vec2 uv;\rvoid main(void) {\rvec3 cornerPos;\rcornerPos.xy=vec2(offset.x-0.5,offset.y-0.5)*size;\rcornerPos.z=0.0;\rvec3 viewPos=(view*vec4(position,1.0)).xyz+cornerPos;\rgl_Position=projection*vec4(viewPos,1.0);\ruv=offset;\r}\r`;\n// Sideeffect\nShaderStore.ShadersStore[name] = shader;\n/** @internal */\nexport const fluidRenderingParticleThicknessVertexShader = { name, shader };\n"]}
{"version":3,"file":"legacy-objFileLoader.js","sourceRoot":"","sources":["../../../../lts/loaders/generated/legacy/legacy-objFileLoader.ts"],"names":[],"mappings":"AAAA,+CAA+C;AAC/C,OAAO,KAAK,OAAO,MAAM,cAAc,CAAC;AACxC;;;GAGG;AACH,MAAM,YAAY,GAAG,OAAO,MAAM,KAAK,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,MAAM,KAAK,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC;AACjH,IAAI,OAAO,YAAY,KAAK,WAAW,EAAE;IACrC,KAAK,MAAM,GAAG,IAAI,OAAO,EAAE;QACvB,IAAI,CAAO,YAAa,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YAC7B,YAAa,CAAC,OAAO,CAAC,GAAG,CAAC,GAAS,OAAQ,CAAC,GAAG,CAAC,CAAC;SAC1D;KACJ;CACJ;AACD,cAAc,cAAc,CAAC","sourcesContent":["/* eslint-disable import/no-internal-modules */\nimport * as Loaders from \"../OBJ/index\";\n/**\n * This is the entry point for the UMD module.\n * The entry point for a future ESM package should be index.ts\n */\nconst globalObject = typeof global !== \"undefined\" ? global : typeof window !== \"undefined\" ? window : undefined;\nif (typeof globalObject !== \"undefined\") {\n    for (const key in Loaders) {\n        if (!(<any>globalObject).BABYLON[key]) {\n            (<any>globalObject).BABYLON[key] = (<any>Loaders)[key];\n        }\n    }\n}\nexport * from \"../OBJ/index\";\n"]}
{"version":3,"file":"extractHighlights.fragment.js","sourceRoot":"","sources":["../../../../lts/core/generated/Shaders/extractHighlights.fragment.ts"],"names":[],"mappings":"AAAA,eAAe;AACf,OAAO,EAAE,WAAW,EAAE,MAAM,wBAAwB,CAAC;AACrD,OAAO,kCAAkC,CAAC;AAE1C,MAAM,IAAI,GAAG,8BAA8B,CAAC;AAC5C,MAAM,MAAM,GAAG;;;;;;;;;;;EAWb,CAAC;AACH,aAAa;AACb,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;AACxC,gBAAgB;AAChB,MAAM,CAAC,MAAM,4BAA4B,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC","sourcesContent":["// Do not edit.\nimport { ShaderStore } from \"../Engines/shaderStore\";\nimport \"./ShadersInclude/helperFunctions\";\n\nconst name = \"extractHighlightsPixelShader\";\nconst shader = `#include<helperFunctions>\nvarying vec2 vUV;\runiform sampler2D textureSampler;\runiform float threshold;\runiform float exposure;\r#define CUSTOM_FRAGMENT_DEFINITIONS\nvoid main(void) \r{\rgl_FragColor=texture2D(textureSampler,vUV);\rfloat luma=dot(LuminanceEncodeApprox,gl_FragColor.rgb*exposure);\rgl_FragColor.rgb=step(threshold,luma)*gl_FragColor.rgb;\r}`;\n// Sideeffect\nShaderStore.ShadersStore[name] = shader;\n/** @internal */\nexport const extractHighlightsPixelShader = { name, shader };\n"]}
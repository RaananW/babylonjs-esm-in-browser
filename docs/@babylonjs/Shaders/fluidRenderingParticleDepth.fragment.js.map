{"version":3,"file":"fluidRenderingParticleDepth.fragment.js","sourceRoot":"","sources":["../../../../lts/core/generated/Shaders/fluidRenderingParticleDepth.fragment.ts"],"names":[],"mappings":"AAAA,eAAe;AACf,OAAO,EAAE,WAAW,EAAE,MAAM,wBAAwB,CAAC;AAErD,MAAM,IAAI,GAAG,wCAAwC,CAAC;AACtD,MAAM,MAAM,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;CA0Bd,CAAC;AACF,aAAa;AACb,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;AACxC,gBAAgB;AAChB,MAAM,CAAC,MAAM,sCAAsC,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC","sourcesContent":["// Do not edit.\nimport { ShaderStore } from \"../Engines/shaderStore\";\n\nconst name = \"fluidRenderingParticleDepthPixelShader\";\nconst shader = `uniform mat4 projection;\rvarying vec2 uv;\rvarying vec3 viewPos;\rvarying float sphereRadius;\r#ifdef FLUIDRENDERING_VELOCITY\nvarying float velocityNorm;\r#endif\nvoid main(void) {\rvec3 normal;\rnormal.xy=uv*2.0-1.0;\rfloat r2=dot(normal.xy,normal.xy);\rif (r2>1.0) discard;\rnormal.z=-sqrt(1.0-r2);\rvec4 realViewPos=vec4(viewPos+normal*sphereRadius,1.0);\rvec4 clipSpacePos=projection*realViewPos;\r#ifdef WEBGPU\ngl_FragDepth=clipSpacePos.z/clipSpacePos.w;\r#else\ngl_FragDepth=(clipSpacePos.z/clipSpacePos.w)*0.5+0.5;\r#endif\n#ifdef FLUIDRENDERING_VELOCITY\nglFragColor=vec4(realViewPos.z,velocityNorm,0.,1.);\r#else\nglFragColor=vec4(realViewPos.z,0.,0.,1.);\r#endif\n}\r`;\n// Sideeffect\nShaderStore.ShadersStore[name] = shader;\n/** @internal */\nexport const fluidRenderingParticleDepthPixelShader = { name, shader };\n"]}
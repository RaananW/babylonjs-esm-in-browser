{"version":3,"file":"physicsShape.js","sourceRoot":"","sources":["../../../../../lts/core/generated/Physics/v2/physicsShape.ts"],"names":[],"mappings":"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","sourcesContent":["import type { TransformNode } from \"../../Meshes/transformNode\";\r\nimport type { BoundingBox } from \"../../Culling/boundingBox\";\r\nimport { ShapeType } from \"./IPhysicsEnginePlugin\";\r\nimport type { IPhysicsEnginePluginV2, PhysicsShapeParameters } from \"./IPhysicsEnginePlugin\";\r\nimport type { PhysicsMaterial } from \"./physicsMaterial\";\r\nimport type { Vector3 } from \"../../Maths/math.vector\";\r\nimport type { Quaternion } from \"../../Maths/math.vector\";\r\nimport type { AbstractMesh } from \"../../Meshes/abstractMesh\";\r\nimport type { Scene } from \"../../scene\";\r\n\r\n/**\r\n *\r\n */\r\n/** @internal */\r\nexport class PhysicsShape {\r\n    /** @internal */\r\n    public _pluginData: any = undefined;\r\n\r\n    private _physicsPlugin: IPhysicsEnginePluginV2;\r\n\r\n    private _type: ShapeType;\r\n\r\n    /**\r\n     *\r\n     * @param type\r\n     * @param options\r\n     * @param scene\r\n     * @returns\r\n     */\r\n    constructor(type: number, options: PhysicsShapeParameters = {}, scene: Scene) {\r\n        this._type = type;\r\n        if (!scene) {\r\n            return;\r\n        }\r\n\r\n        const physicsEngine = scene.getPhysicsEngine();\r\n        if (!physicsEngine) {\r\n            throw new Error(\"No Physics Engine available.\");\r\n        }\r\n        if (physicsEngine.getPluginVersion() != 2) {\r\n            throw new Error(\"Plugin version is incorrect. Expected version 2.\");\r\n        }\r\n        const physicsPlugin = physicsEngine.getPhysicsPlugin();\r\n        if (!physicsPlugin) {\r\n            throw new Error(\"No Physics Plugin available.\");\r\n        }\r\n\r\n        this._physicsPlugin = physicsPlugin as IPhysicsEnginePluginV2;\r\n        this._physicsPlugin.initShape(this, type, options);\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    public get type(): ShapeType {\r\n        return this._type;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param layer\r\n     */\r\n    public setFilterLayer(layer: number): void {\r\n        this._physicsPlugin.setFilterLayer(this, layer);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns\r\n     */\r\n    public getFilterLayer(): number {\r\n        return this._physicsPlugin.getFilterLayer(this);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param materialId\r\n     */\r\n    public setMaterial(material: PhysicsMaterial): void {\r\n        this._physicsPlugin.setMaterial(this, material);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns\r\n     */\r\n    public getMaterial(): PhysicsMaterial | undefined {\r\n        return this._physicsPlugin.getMaterial(this);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param density\r\n     */\r\n    public setDensity(density: number): void {\r\n        this._physicsPlugin.setDensity(this, density);\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    public getDensity(): number {\r\n        return this._physicsPlugin.getDensity(this);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param newChild\r\n     * @param childTransform\r\n     */\r\n    public addChild(newChild: PhysicsShape, childTransform: TransformNode): void {\r\n        this._physicsPlugin.addChild(this, newChild, childTransform);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param childIndex\r\n     */\r\n    public removeChild(childIndex: number): void {\r\n        this._physicsPlugin.removeChild(this, childIndex);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns\r\n     */\r\n    public getNumChildren(): number {\r\n        return this._physicsPlugin.getNumChildren(this);\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    public getBoundingBox(): BoundingBox {\r\n        return this._physicsPlugin.getBoundingBox(this);\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    public dispose() {\r\n        this._physicsPlugin.disposeShape(this);\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n */\r\n/** @internal */\r\nexport class PhysicsShapeSphere extends PhysicsShape {\r\n    /** @internal */\r\n    /**\r\n     *\r\n     * @param center\r\n     * @param radius\r\n     * @param scene\r\n     */\r\n    constructor(center: Vector3, radius: number, scene: Scene) {\r\n        super(ShapeType.SPHERE, { center: center, radius: radius }, scene);\r\n    }\r\n}\r\n\r\n/***\r\n *\r\n */\r\n/** @internal */\r\nexport class PhysicsShapeCapsule extends PhysicsShape {\r\n    /** @internal */\r\n    /**\r\n     *\r\n     * @param pointA\r\n     * @param pointB\r\n     * @param radius\r\n     * @param scene\r\n     */\r\n    constructor(pointA: Vector3, pointB: Vector3, radius: number, scene: Scene) {\r\n        super(ShapeType.CAPSULE, { pointA: pointA, pointB: pointB, radius: radius }, scene);\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n */\r\n/** @internal */\r\nexport class PhysicsShapeCylinder extends PhysicsShape {\r\n    /** @internal */\r\n    /**\r\n     *\r\n     * @param pointA\r\n     * @param pointB\r\n     * @param radius\r\n     * @param scene\r\n     */\r\n    constructor(pointA: Vector3, pointB: Vector3, radius: number, scene: Scene) {\r\n        super(ShapeType.CYLINDER, { pointA: pointA, pointB: pointB, radius: radius }, scene);\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n */\r\n/** @internal */\r\nexport class PhysicsShapeShapeBox extends PhysicsShape {\r\n    /** @internal */\r\n    /**\r\n     *\r\n     * @param center\r\n     * @param rotation\r\n     * @param extents\r\n     * @param scene\r\n     */\r\n    constructor(center: Vector3, rotation: Quaternion, extents: Vector3, scene: Scene) {\r\n        super(ShapeType.BOX, { center: center, rotation: rotation, extents: extents }, scene);\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n */\r\n/** @internal */\r\nexport class PhysicsShapeShapeConvexHull extends PhysicsShape {\r\n    /** @internal */\r\n    /**\r\n     *\r\n     * @param mesh\r\n     * @param scene\r\n     */\r\n    constructor(mesh: AbstractMesh, scene: Scene) {\r\n        super(ShapeType.CONVEX_HULL, { mesh: mesh }, scene);\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n */\r\n/** @internal */\r\nexport class PhysicsShapeShapeMesh extends PhysicsShape {\r\n    /** @internal */\r\n    /**\r\n     *\r\n     * @param mesh\r\n     * @param scene\r\n     */\r\n    constructor(mesh: AbstractMesh, scene: Scene) {\r\n        super(ShapeType.MESH, { mesh: mesh }, scene);\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n */\r\n/** @internal */\r\nexport class PhysicsShapeShapeContainer extends PhysicsShape {\r\n    /** @internal */\r\n    /**\r\n     *\r\n     * @param mesh\r\n     * @param scene\r\n     */\r\n    constructor(mesh: AbstractMesh, scene: Scene) {\r\n        super(ShapeType.CONTAINER, {}, scene);\r\n    }\r\n}\r\n"]}
{"version":3,"file":"shaderDefineIsDefinedOperator.js","sourceRoot":"","sources":["../../../../../../../lts/core/generated/Engines/Processors/Expressions/Operators/shaderDefineIsDefinedOperator.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,sBAAsB,EAAE,MAAM,2BAA2B,CAAC;AAEnE,gBAAgB;AAChB,MAAM,OAAO,6BAA8B,SAAQ,sBAAsB;IACrE,YAA0B,MAAc,EAAS,MAAe,KAAK;QACjE,KAAK,EAAE,CAAC;QADc,WAAM,GAAN,MAAM,CAAQ;QAAS,QAAG,GAAH,GAAG,CAAiB;IAErE,CAAC;IAEM,MAAM,CAAC,aAAwC;QAClD,IAAI,SAAS,GAAG,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,SAAS,CAAC;QAEzD,IAAI,IAAI,CAAC,GAAG,EAAE;YACV,SAAS,GAAG,CAAC,SAAS,CAAC;SAC1B;QAED,OAAO,SAAS,CAAC;IACrB,CAAC;CACJ","sourcesContent":["import { ShaderDefineExpression } from \"../shaderDefineExpression\";\r\n\r\n/** @internal */\r\nexport class ShaderDefineIsDefinedOperator extends ShaderDefineExpression {\r\n    public constructor(public define: string, public not: boolean = false) {\r\n        super();\r\n    }\r\n\r\n    public isTrue(preprocessors: { [key: string]: string }) {\r\n        let condition = preprocessors[this.define] !== undefined;\r\n\r\n        if (this.not) {\r\n            condition = !condition;\r\n        }\r\n\r\n        return condition;\r\n    }\r\n}\r\n"]}
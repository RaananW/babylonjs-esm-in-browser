{"version":3,"file":"convolution.fragment.js","sourceRoot":"","sources":["../../../../lts/core/generated/Shaders/convolution.fragment.ts"],"names":[],"mappings":"AAAA,eAAe;AACf,OAAO,EAAE,WAAW,EAAE,MAAM,wBAAwB,CAAC;AAErD,MAAM,IAAI,GAAG,wBAAwB,CAAC;AACtC,MAAM,MAAM,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAgCb,CAAC;AACH,aAAa;AACb,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;AACxC,gBAAgB;AAChB,MAAM,CAAC,MAAM,sBAAsB,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC","sourcesContent":["// Do not edit.\nimport { ShaderStore } from \"../Engines/shaderStore\";\n\nconst name = \"convolutionPixelShader\";\nconst shader = `varying vec2 vUV;\runiform sampler2D textureSampler;\runiform vec2 screenSize;\runiform float kernel[9];\r#define CUSTOM_FRAGMENT_DEFINITIONS\nvoid main(void)\r{\rvec2 onePixel=vec2(1.0,1.0)/screenSize;\rvec4 colorSum =\rtexture2D(textureSampler,vUV+onePixel*vec2(-1,-1))*kernel[0] +\rtexture2D(textureSampler,vUV+onePixel*vec2(0,-1))*kernel[1] +\rtexture2D(textureSampler,vUV+onePixel*vec2(1,-1))*kernel[2] +\rtexture2D(textureSampler,vUV+onePixel*vec2(-1,0))*kernel[3] +\rtexture2D(textureSampler,vUV+onePixel*vec2(0,0))*kernel[4] +\rtexture2D(textureSampler,vUV+onePixel*vec2(1,0))*kernel[5] +\rtexture2D(textureSampler,vUV+onePixel*vec2(-1,1))*kernel[6] +\rtexture2D(textureSampler,vUV+onePixel*vec2(0,1))*kernel[7] +\rtexture2D(textureSampler,vUV+onePixel*vec2(1,1))*kernel[8];\rfloat kernelWeight =\rkernel[0] +\rkernel[1] +\rkernel[2] +\rkernel[3] +\rkernel[4] +\rkernel[5] +\rkernel[6] +\rkernel[7] +\rkernel[8];\rif (kernelWeight<=0.0) {\rkernelWeight=1.0;\r}\rgl_FragColor=vec4((colorSum/kernelWeight).rgb,1);\r}`;\n// Sideeffect\nShaderStore.ShadersStore[name] = shader;\n/** @internal */\nexport const convolutionPixelShader = { name, shader };\n"]}
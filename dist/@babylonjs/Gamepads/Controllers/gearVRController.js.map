{"version":3,"file":"gearVRController.js","sourceRoot":"","sources":["../../../../../lts/core/generated/Gamepads/Controllers/gearVRController.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,OAAO,EAAE,MAAM,yBAAyB,CAAC;AAElD,OAAO,EAAE,IAAI,EAAE,MAAM,mBAAmB,CAAC;AACzC,OAAO,EAAE,WAAW,EAAE,MAAM,2BAA2B,CAAC;AACxD,OAAO,EAAE,eAAe,EAAE,MAAM,mBAAmB,CAAC;AAEpD,OAAO,EAAE,yBAAyB,EAAE,2BAA2B,EAAE,MAAM,yBAAyB,CAAC;AAEjG;;GAEG;AACH,MAAM,OAAO,gBAAiB,SAAQ,eAAe;IAoBjD;;;OAGG;IACH,YAAY,SAAc;QACtB,KAAK,CAAC,SAAS,CAAC,CAAC;QAVJ,oCAA+B,GAAG;YAC/C,6BAA6B;YAC7B,iCAAiC,EAAE,UAAU;SAChD,CAAC;QAQE,IAAI,CAAC,cAAc,GAAG,yBAAyB,CAAC,OAAO,CAAC;QACxD,6FAA6F;QAC7F,IAAI,CAAC,mBAAmB,GAAG,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;QACvF,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;IACzD,CAAC;IAED;;;;OAIG;IACI,kBAAkB,CAAC,KAAY,EAAE,UAAyC;QAC7E,WAAW,CAAC,UAAU,CAAC,EAAE,EAAE,gBAAgB,CAAC,cAAc,EAAE,gBAAgB,CAAC,cAAc,EAAE,KAAK,EAAE,CAAC,SAAS,EAAE,EAAE;YAC9G,iEAAiE;YACjE,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;YACjC,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC;YAC3B,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC;YAChC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YACtC,IAAI,UAAU,EAAE;gBACZ,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;aAClC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;;;OAIG;IACO,mBAAmB,CAAC,SAAiB,EAAE,KAA4B;QACzE,IAAI,SAAS,GAAG,IAAI,CAAC,+BAA+B,CAAC,MAAM,EAAE;YACzD,MAAM,cAAc,GAAW,IAAI,CAAC,+BAA+B,CAAC,SAAS,CAAC,CAAC;YAE/E,gFAAgF;YAChF,MAAM,UAAU,GAAS,IAAK,CAAC,cAAc,CAAC,CAAC;YAC/C,IAAI,UAAU,EAAE;gBACZ,UAAU,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;aACrC;SACJ;IACL,CAAC;;AAjED;;GAEG;AACW,+BAAc,GAAW,4CAA4C,CAAC;AACpF;;GAEG;AACW,+BAAc,GAAW,iBAAiB,CAAC;AAEzD;;GAEG;AACoB,kCAAiB,GAAW,SAAS,CAAC,CAAC,6BAA6B;AAwD/F,2BAA2B,CAAC,oBAAoB,CAAC,IAAI,CAAC;IAClD,SAAS,EAAE,CAAC,WAAW,EAAE,EAAE;QACvB,OAAO,WAAW,CAAC,EAAE,CAAC,OAAO,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,KAAK,CAAC,IAAI,WAAW,CAAC,EAAE,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,IAAI,WAAW,CAAC,EAAE,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;IACzK,CAAC;IACD,MAAM,EAAE,CAAC,WAAW,EAAE,EAAE;QACpB,OAAO,IAAI,gBAAgB,CAAC,WAAW,CAAC,CAAC;IAC7C,CAAC;CACJ,CAAC,CAAC","sourcesContent":["import type { Scene } from \"../../scene\";\r\nimport { Vector3 } from \"../../Maths/math.vector\";\r\nimport type { AbstractMesh } from \"../../Meshes/abstractMesh\";\r\nimport { Mesh } from \"../../Meshes/mesh\";\r\nimport { SceneLoader } from \"../../Loading/sceneLoader\";\r\nimport { WebVRController } from \"./webVRController\";\r\nimport type { ExtendedGamepadButton } from \"./poseEnabledController\";\r\nimport { PoseEnabledControllerType, PoseEnabledControllerHelper } from \"./poseEnabledController\";\r\n\r\n/**\r\n * Gear VR Controller\r\n */\r\nexport class GearVRController extends WebVRController {\r\n    /**\r\n     * Base Url for the controller model.\r\n     */\r\n    public static MODEL_BASE_URL: string = \"https://controllers.babylonjs.com/generic/\";\r\n    /**\r\n     * File name for the controller model.\r\n     */\r\n    public static MODEL_FILENAME: string = \"generic.babylon\";\r\n\r\n    /**\r\n     * Gamepad Id prefix used to identify this controller.\r\n     */\r\n    public static readonly GAMEPAD_ID_PREFIX: string = \"Gear VR\"; // id is 'Gear VR Controller'\r\n\r\n    private readonly _buttonIndexToObservableNameMap = [\r\n        \"onPadStateChangedObservable\", // Pad\r\n        \"onTriggerStateChangedObservable\", // Trigger\r\n    ];\r\n\r\n    /**\r\n     * Creates a new GearVRController from a gamepad\r\n     * @param vrGamepad the gamepad that the controller should be created from\r\n     */\r\n    constructor(vrGamepad: any) {\r\n        super(vrGamepad);\r\n        this.controllerType = PoseEnabledControllerType.GEAR_VR;\r\n        // Initial starting position defaults to where hand would be (incase of only 3dof controller)\r\n        this._calculatedPosition = new Vector3(this.hand == \"left\" ? -0.15 : 0.15, -0.5, 0.25);\r\n        this._disableTrackPosition(this._calculatedPosition);\r\n    }\r\n\r\n    /**\r\n     * Implements abstract method on WebVRController class, loading controller meshes and calling this.attachToMesh if successful.\r\n     * @param scene scene in which to add meshes\r\n     * @param meshLoaded optional callback function that will be called if the mesh loads successfully.\r\n     */\r\n    public initControllerMesh(scene: Scene, meshLoaded?: (mesh: AbstractMesh) => void) {\r\n        SceneLoader.ImportMesh(\"\", GearVRController.MODEL_BASE_URL, GearVRController.MODEL_FILENAME, scene, (newMeshes) => {\r\n            // Offset the controller so it will rotate around the users wrist\r\n            const mesh = new Mesh(\"\", scene);\r\n            newMeshes[1].parent = mesh;\r\n            newMeshes[1].position.z = -0.15;\r\n            this._defaultModel = mesh;\r\n            this.attachToMesh(this._defaultModel);\r\n            if (meshLoaded) {\r\n                meshLoaded(this._defaultModel);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Called once for each button that changed state since the last frame\r\n     * @param buttonIdx Which button index changed\r\n     * @param state New state of the button\r\n     */\r\n    protected _handleButtonChange(buttonIdx: number, state: ExtendedGamepadButton) {\r\n        if (buttonIdx < this._buttonIndexToObservableNameMap.length) {\r\n            const observableName: string = this._buttonIndexToObservableNameMap[buttonIdx];\r\n\r\n            // Only emit events for buttons that we know how to map from index to observable\r\n            const observable = (<any>this)[observableName];\r\n            if (observable) {\r\n                observable.notifyObservers(state);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nPoseEnabledControllerHelper._ControllerFactories.push({\r\n    canCreate: (gamepadInfo) => {\r\n        return gamepadInfo.id.indexOf(GearVRController.GAMEPAD_ID_PREFIX) === 0 || gamepadInfo.id.indexOf(\"Oculus Go\") !== -1 || gamepadInfo.id.indexOf(\"Vive Focus\") !== -1;\r\n    },\r\n    create: (gamepadInfo) => {\r\n        return new GearVRController(gamepadInfo);\r\n    },\r\n});\r\n"]}